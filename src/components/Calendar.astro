---
import { getHolidays, getExtendedWeekends } from '../utils/holidayUtils.js';
import { getMonthName, getWeekdayName, getMonthStartDay, getDaysInMonth, getCurrentYear } from '../utils/dateUtils.js';

const { year = getCurrentYear() } = Astro.props;

const holidays = getHolidays(year);
const { extendedWeekends, extraExtendedWeekends } = getExtendedWeekends(year);

const months = Array.from({ length: 12 }, (_, i) => {
  const date = new Date(Date.UTC(year, i, 1));
  const startDay = getMonthStartDay(year, i);
  return {
    name: getMonthName(date),
    days: getDaysInMonth(year, i),
    startDay: startDay,
  };
});

const weekdays = Array.from({ length: 7 }, (_, i) => getWeekdayName(i));

function getDayClass(year, month, day) {
  const date = new Date(Date.UTC(year, month, day));
  const dateString = date.toLocaleString('lt-LT', { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'Europe/Vilnius' });
  const dayOfWeek = date.getUTCDay();
  const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;
  const isHoliday = holidays.some(h => h.date === dateString);
  const isExtendedWeekend = extendedWeekends.includes(dateString);
  const isExtraExtendedWeekend = extraExtendedWeekends.includes(dateString);

  let classes = 'relative p-2 h-16 md:h-20 border border-gray-200 transition-all duration-200 ease-in-out';
  if (isWeekend) classes += ' bg-gray-50 hover:bg-gray-100';
  if (isHoliday) classes += ' bg-red-50 hover:bg-red-100';
  if (isExtendedWeekend) classes += ' bg-green-50 hover:bg-green-100';
  if (isExtraExtendedWeekend) classes += ' bg-blue-50 hover:bg-blue-100';
  
  const dayLabel = getDayLabel(year, month, day);
  if (dayLabel) classes += ' has-tooltip';
  
  return classes;
}

function getDayLabel(year, month, day) {
  const date = new Date(Date.UTC(year, month, day));
  const dateString = date.toLocaleString('lt-LT', { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'Europe/Vilnius' });
  const holiday = holidays.find(h => h.date === dateString);
  if (holiday) return holiday.name;
  if (extraExtendedWeekends.includes(dateString)) return 'Ypač pratęstas savaitgalis';
  if (extendedWeekends.includes(dateString)) return 'Pratęstas savaitgalis';
  return '';
}
---

<div class="calendar-container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <h1 class="text-4xl font-bold text-center text-gray-900 mb-6">{year} Metų Kalendorius</h1>
  
  <div class="max-w-2xl mx-auto mb-8 p-6 bg-white rounded-lg shadow-md">
    <h2 class="text-2xl font-bold text-gray-900 mb-4">Spalvų reikšmės</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div class="flex items-center">
        <div class="w-6 h-6 bg-gray-50 border border-gray-200 mr-3 rounded"></div>
        <span class="text-sm text-gray-700">Savaitgalis</span>
      </div>
      <div class="flex items-center">
        <div class="w-6 h-6 bg-red-50 border border-gray-200 mr-3 rounded"></div>
        <span class="text-sm text-gray-700">Šventinė diena</span>
      </div>
      <div class="flex items-center">
        <div class="w-6 h-6 bg-green-50 border border-gray-200 mr-3 rounded"></div>
        <span class="text-sm text-gray-700">Pratęstas savaitgalis (4+ dienos)</span>
      </div>
      <div class="flex items-center">
        <div class="w-6 h-6 bg-blue-50 border border-gray-200 mr-3 rounded"></div>
        <span class="text-sm text-gray-700">Ypač pratęstas savaitgalis (5+ dienos)</span>
      </div>
    </div>
  </div>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
    {months.map((month, monthIndex) => (
      <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <div class="bg-blue-600 text-white py-3 px-4">
          <h2 class="text-xl font-semibold text-center">{month.name}</h2>
        </div>
        <div class="grid grid-cols-7 bg-gray-100 text-gray-700 text-xs font-semibold">
          {weekdays.map((day) => (
            <div class="py-2 text-center">{day}</div>
          ))}
        </div>
        <div class="grid grid-cols-7 gap-px bg-gray-200">
          {Array.from({ length: month.startDay }).map(() => (
            <div class="bg-white"></div>
          ))}
          {Array.from({ length: month.days }).map((_, dayIndex) => {
            const day = dayIndex + 1;
            const dayClass = getDayClass(year, monthIndex, day);
            const dayLabel = getDayLabel(year, monthIndex, day);
            return (
              <div class={`${dayClass}`}>
                <span class="absolute top-1 left-2 text-sm font-light">{day}</span>
                {dayLabel && (
                  <span class="tooltip">{dayLabel}</span>
                )}
              </div>
            );
          })}
        </div>
      </div>
    ))}
  </div>
</div>
