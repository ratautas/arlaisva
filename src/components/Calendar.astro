---
import { getHolidays, getExtendedWeekends } from '../utils/holidayUtils.js';
import { getMonthName, getWeekdayName, getMonthStartDay, getDaysInMonth, getCurrentYear, formatDate } from '../utils/dateUtils.js';
import { EXTENDED_WEEKEND_LABEL, EXTRA_EXTENDED_WEEKEND_LABEL } from '../utils/constants.js';

const { year = getCurrentYear() } = Astro.props;

const holidays = getHolidays(year);
const { extendedWeekends, extraExtendedWeekends } = getExtendedWeekends(year);

const months = Array.from({ length: 12 }, (_, i) => {
  const date = new Date(Date.UTC(year, i, 1));
  const startDay = getMonthStartDay(year, i);
  return {
    name: getMonthName(date),
    days: getDaysInMonth(year, i),
    startDay: startDay,
  };
});

const weekdays = Array.from({ length: 7 }, (_, i) => getWeekdayName(i));

function getDayClass(year, month, day) {
  const date = new Date(Date.UTC(year, month, day));
  const dateString = date.toLocaleString('lt-LT', { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'Europe/Vilnius' });
  const dayOfWeek = date.getUTCDay();
  const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;
  const isHoliday = holidays.some(h => h.date === dateString);
  const isExtendedWeekend = extendedWeekends.includes(dateString);
  const isExtraExtendedWeekend = extraExtendedWeekends.includes(dateString);

  let classes = 'relative transition-all duration-200 ease-in-out';
  if (isWeekend) classes += ' bg-gray-100/80 hover:bg-gray-100';
  if (isHoliday) classes += ' bg-red-100/80 hover:bg-red-100';
  if (isExtendedWeekend) classes += ' bg-green-100/80 hover:bg-green-100';
  if (isExtraExtendedWeekend) classes += ' bg-blue-100/80 hover:bg-blue-100';
  
  const dayLabel = getDayLabel(year, month, day);
  if (dayLabel) classes += ' has-tooltip';
  
  return classes;
}

function getDayLabel(year, month, day) {
  const date = new Date(Date.UTC(year, month, day));
  const dateString = date.toLocaleString('lt-LT', { year: 'numeric', month: '2-digit', day: '2-digit', timeZone: 'Europe/Vilnius' });
  const holiday = holidays.find(h => h.date === dateString);
  if (holiday) return holiday.name;
  if (extraExtendedWeekends.includes(dateString)) return EXTRA_EXTENDED_WEEKEND_LABEL;
  if (extendedWeekends.includes(dateString)) return EXTENDED_WEEKEND_LABEL;
  return '';
}
---

<div class="calendar-container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

  <div class="max-w-4xl mx-auto mb-8 flex items-center justify-center space-x-4">
    <a 
      href={`/${year - 1}`}
      class="p-2 text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-50 transition-colors"
      aria-label="Previous year"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
      </svg>
    </a>
    <h1 class="text-2xl font-medium text-gray-700">{year} metai</h1>
    <a 
      href={`/${year + 1}`}
      class="p-2 text-gray-400 hover:text-gray-600 rounded-md hover:bg-gray-50 transition-colors"
      aria-label="Next year"
    >
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
      </svg>
    </a>
  </div>

  <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
    {months.map((month, monthIndex) => (
      <div class="bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow duration-200">
        <div class="py-3 px-4">
          <h2 class="text-lg font-medium text-gray-700 text-center">{month.name}</h2>
        </div>
        <div class="grid grid-cols-7 text-gray-500 text-xs font-medium">
          {weekdays.map((day) => (
            <div class="py-2 text-center">{day}</div>
          ))}
        </div>
        <div class="grid grid-cols-7 gap-[1px] bg-white p-[1px]">
          {Array.from({ length: month.startDay }).map(() => (
            <div class="bg-gray-50/80 h-7"></div>
          ))}
          {Array.from({ length: month.days }).map((_, dayIndex) => {
            const day = dayIndex + 1;
            const dayClass = getDayClass(year, monthIndex, day);
            const dayLabel = getDayLabel(year, monthIndex, day);
            return (
              <div class={`${dayClass} h-7 flex items-center justify-center hover:shadow-sm`}>
                <span class="text-gray-700">{day}</span>
                {dayLabel && (
                  <span class="tooltip">{dayLabel}</span>
                )}
              </div>
            );
          })}
        </div>
      </div>
    ))}
  </div>

  <div class="max-w-4xl mx-auto mb-8 p-4 bg-gray-100/50 rounded-xl">
    <h2 class="text-base font-medium text-gray-600 mb-3">Spalvų reikšmės</h2>
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
      <div class="flex items-center">
        <div class="w-3 h-3 bg-white rounded-sm mr-2"></div>
        <span class="text-gray-500">Savaitgalis</span>
      </div>
      <div class="flex items-center">
        <div class="w-3 h-3 bg-red-100 rounded-sm mr-2"></div>
        <span class="text-gray-500">Šventinė diena</span>
      </div>
      <div class="flex items-center">
        <div class="w-3 h-3 bg-green-100 rounded-sm mr-2"></div>
        <span class="text-gray-500">Pratęstas savaitgalis (4+)</span>
      </div>
      <div class="flex items-center">
        <div class="w-3 h-3 bg-blue-100 rounded-sm mr-2"></div>
        <span class="text-gray-500">Ypač pratęstas savaitgalis (5+)</span>
      </div>
    </div>
  </div>

  <div class="max-w-4xl mx-auto mb-8 p-6 bg-white rounded-xl shadow-sm">
    <h2 class="text-lg font-medium text-gray-700 mb-4">Pratęsti savaitgaliai {year} metais</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div>
        <h3 class="text-sm font-medium text-gray-600 mb-3">Pratęsti savaitgaliai (4+ dienos)</h3>
        <div class="grid grid-cols-2 gap-2 text-xs">
          {extendedWeekends.map((date) => (
            <div class="bg-green-100 p-2 rounded-lg text-gray-700">
              {formatDate(new Date(date))}
            </div>
          ))}
        </div>
      </div>
      <div>
        <h3 class="text-sm font-medium text-gray-600 mb-3">Ypač pratęsti savaitgaliai (5+ dienos)</h3>
        <div class="grid grid-cols-2 gap-2 text-xs">
          {extraExtendedWeekends.map((date) => (
            <div class="bg-blue-100 p-2 rounded-lg text-gray-700">
              {formatDate(new Date(date))}
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .has-tooltip {
    position: relative;
  }
  .has-tooltip .tooltip {
    visibility: hidden;
    width: 120px;
    background-color: #ffffff;
    color: #1e293b;
    text-align: center;
    padding: 5px 0;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -60px;
    opacity: 0;
    transition: opacity 0.3s;
    border: 1px solid #e2e8f0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  .has-tooltip .tooltip::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #ffffff transparent transparent transparent;
  }
</style>
