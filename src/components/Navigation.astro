---
import { getCurrentYear } from '../utils/dateUtils';

const { currentPage } = Astro.props;
const currentYear = getCurrentYear();
const years = Array.from({ length: 11 }, (_, i) => currentYear + i);

const isActive = (page) => currentPage === page ? 'bg-blue-700' : 'hover:bg-blue-600';

// Get the current year from the URL or use the current year as default
const urlYear = Astro.url.pathname.split('/')[1];
const selectedYear = urlYear && !isNaN(parseInt(urlYear)) ? parseInt(urlYear) : currentYear;

// Calculate prev/next years
const prevYear = selectedYear - 1;
const nextYear = selectedYear + 1;
---

<nav class="bg-white/80 backdrop-blur-xs border-b border-gray-100">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <div class="flex items-center">
        <a href="/" class="shrink-0">
          <span class="text-gray-700 font-medium text-lg">LT Kalendorius</span>
        </a>
        <div class="hidden md:block">
          <div class="ml-10 flex items-baseline space-x-4">
            <a href="/" class={`text-gray-600 hover:text-gray-900 px-3 py-2 text-sm font-medium rounded-md transition-colors ${isActive('home')}`}>
              Pradžia
            </a>
            <a href="/holidays" class={`text-gray-600 hover:text-gray-900 px-3 py-2 text-sm font-medium rounded-md transition-colors ${isActive('holidays')}`}>
              Šventės
            </a>
            <a href="/about" class={`text-gray-600 hover:text-gray-900 px-3 py-2 text-sm font-medium rounded-md transition-colors ${isActive('about')}`}>
              Apie
            </a>
          </div>
        </div>
      </div>
      <div class="ml-4 flex items-center md:ml-6 space-x-2">
        <a 
          href={`/${prevYear}`}
          class="p-2 text-gray-500 hover:text-gray-700 rounded-md hover:bg-gray-100 transition-colors"
          aria-label="Previous year"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
          </svg>
        </a>
        
        <select
          id="yearSelect"
          class="bg-white text-gray-700 px-3 py-2 text-sm font-medium rounded-md border border-gray-200 focus:outline-hidden focus:ring-2 focus:ring-blue-100 focus:border-blue-200 transition-all"
        >
          {years.map((year) => (
            <option value={year} selected={year === selectedYear}>
              {year}
            </option>
          ))}
        </select>

        <a 
          href={`/${nextYear}`}
          class="p-2 text-gray-500 hover:text-gray-700 rounded-md hover:bg-gray-100 transition-colors"
          aria-label="Next year"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-5 h-5">
            <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
          </svg>
        </a>
      </div>
    </div>
  </div>
</nav>

<script>
  const yearSelect = document.getElementById('yearSelect');
  if (yearSelect) {
    yearSelect.addEventListener('change', (event) => {
      const selectedYear = (event.target as HTMLSelectElement).value;
      window.location.href = `/${selectedYear}`;
    });
  }
</script>
